// <auto-generated />
using System;
using BookStore.Backend.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookStore.Backend.Migrations
{
    [DbContext(typeof(BookStoreDb))]
    [Migration("20250907155503_initial2")]
    partial class initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookStore.Backend.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<DateOnly>("Added")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            Added = new DateOnly(2025, 9, 14),
                            Name = "R.K. Token"
                        },
                        new
                        {
                            AuthorId = 2,
                            Added = new DateOnly(2002, 7, 21),
                            Name = "J.K Rowling"
                        });
                });

            modelBuilder.Entity("BookStore.Backend.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateOnly>("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "This is the lord of the rings",
                            Name = "Lord of the rings",
                            Price = 24.99m,
                            ReleaseDate = new DateOnly(2015, 10, 21)
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            CategoryId = 1,
                            Description = "This is the lord of the rings 1",
                            Name = "Lord of the rings 1",
                            Price = 4.99m,
                            ReleaseDate = new DateOnly(2022, 8, 21)
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 2,
                            CategoryId = 2,
                            Description = "This is harry potter",
                            Name = "Harry Potter",
                            Price = 8.99m,
                            ReleaseDate = new DateOnly(2003, 2, 1)
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 2,
                            CategoryId = 2,
                            Description = "This is harry potter 2",
                            Name = "Harry Potter 2",
                            Price = 14.99m,
                            ReleaseDate = new DateOnly(1998, 5, 15)
                        });
                });

            modelBuilder.Entity("BookStore.Backend.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "This is the fiction description",
                            Name = "Fiction"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "This is the drama description",
                            Name = "Drama"
                        });
                });

            modelBuilder.Entity("BookStore.Backend.Models.Book", b =>
                {
                    b.HasOne("BookStore.Backend.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookStore.Backend.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
